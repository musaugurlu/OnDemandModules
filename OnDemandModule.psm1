if (-not($OnDemandModulePath))
{
    $Global:OnDemandModulePath = "C:\OnDemandModule"   
}

function Import-OnDemandModule
{
    [CmdletBinding()]
    param (
        [Parameter(Position = 0)]
        [string] $Name,
        [ValidateScript( { Test-Path $_ })]
        [string] $Path = $OnDemandModulePath
    )
    
    begin
    {
        $CurrentPSModulePath = $env:PSModulePath
        $env:PSModulePath = $env:PSModulePath + ";$OnDemandModulePath" 
    }
    
    process
    {
        $Module = Get-Module "$OnDemandModulePath\$Name" -ListAvailable -ErrorAction SilentlyContinue

        if (!$Module)
        {
            $env:PSModulePath = $CurrentPSModulePath
            throw "$Name Module could not be found!"
            break
        }

        try
        {
            Import-Module $Name
        }
        catch
        {
            $env:PSModulePath = $CurrentPSModulePath
            throw $Error[0].Message        
        }
    }
    
    end
    {
        $env:PSModulePath = $CurrentPSModulePath
    }
}

function Install-OnDemandModule
{
    [CmdletBinding()]
    param (
        [Parameter(Position = 0)]
        [string] $Name
    )
    
    begin
    {      
    }
    
    process
    {
        Save-Module -Path $OnDemandModulePath -Name $Name
    }
    
    end
    {
    }
}

function Set-OnDemandModulePath
{
    [CmdletBinding()]
    param (
        [Parameter(ValueFromPipelineByPropertyName=$true, ValueFromPipeline=$true)]
        [ValidateScript( { Test-Path $_ })]
        [string] $Path
    )
    
    begin
    {
        
    }
    
    process
    {
        $ProfilePath = Join-Path -Path (Split-Path -Path $profile -Parent) -ChildPath "Profile.ps1"
        $PathVariable = "`$Global:OnDemandModulePath = `'$Path`'"

        if($ProfilePath -and (Get-Content $ProfilePath | Where-Object {$_ -like '*Global:OnDemandModulePath*'})) {
            
            $ProfileContent = Get-Content -Path $ProfilePath 
            
            $ProfileContent | ForEach-Object { $_ -replace ".*Global:OnDemandModulePath.*",$PathVariable } | Set-Content -Path $ProfilePath -Encoding utf8

        } else {
            $Content = @"
`n
################## OnDemandModule Path ###################

$PathVariable

########### Generated by OnDemandModule module ###########
"@
        Add-Content -Path $ProfilePath -Value $Content
        }

        $Global:OnDemandModulePath = $Path
    }
    
    end
    {
    }
}